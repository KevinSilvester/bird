name: Release
on:
  push:
    branches:
      - "main"

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            deb: true

          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            deb: true

          - os: macos-latest
            target: x86_64-apple-darwin

          - os: macos-latest
            target: aarch64-apple-darwin

          - os: windows-latest
            target: x86_64-pc-windows-msvc

          - os: windows-latest
            target: aarch64-pc-windows-msvc

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.target }}
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get version
        id: get_version
        uses: SebRollen/toml-action@v1.0.0
        with:
          file: Cargo.toml
          field: package.version

      - name: Set artifact name
        shell: bash
        run: |
          name="bird-v${{ steps.get_version.outputs.value }}-${{ matrix.target }}"
          echo "ARTIFACT_NAME=$name" >> $GITHUB_ENV
          echo "version: v${{ steps.get_version.outputs.value }}"
          echo "artifact: $name"

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Setup cache
        uses: Swatinem/rust-cache@v1

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked --target=${{ matrix.target }} --color=always
          use-cross: ${{ runner.os == 'Linux' }}

      - name: Install cargo-deb
        if: ${{ matrix.deb == true }}
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-deb

      - name: Build deb
        if: ${{ matrix.deb == true }}
        uses: actions-rs/cargo@v1
        with:
          command: deb
          args: --no-build --no-strip --output=bird-v${{ steps.get_version.outputs.value }}-${{ matrix.target }}.deb --target=${{ matrix.target }}

      - name: Package (Unix)
        if: runner.os != 'Windows'
        run: >
          tar -cv
          README.md LICENSE.txt
          -C target/${{ matrix.target }}/release/ bird
          | gzip --best
          > 'bird-v${{ steps.get_version.outputs.value }}-${{ matrix.target }}.tar.gz'

      - name: Package (Windows)
        if: runner.os == 'Windows'
        run: >
          7z a 'bird-v${{ steps.get_version.outputs.value }}-${{ matrix.target }}.zip'
          README.md LICENSE.txt
          ./target/${{ matrix.target }}/release/bird.exe

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: bird-v${{ steps.get_version.outputs.value }}-${{ matrix.target }}
          path: |
            *.deb
            *.tar.gz
            *.zip

      - name: Create release
        # if: startsWith(github.event.head_commit.message, 'chore(release)')
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            *.deb
            *.tar.gz
            *.zip
          name: v${{ steps.get_version.outputs.value }}
          tag_name: v${{ steps.get_version.outputs.value }}
          generate_release_notes: true
